---
# Install tasks for ansible-role-zabbixserver
## Download and Extract
## --------------------------
- name: Install required system packages.
  become: yes
  apt: pkg={{ item }} state=installed update_cache=true
  with_items: "{{ zabbixserver_packages }}"

- name: Download zabbix
  get_url: url=http://liquidtelecom.dl.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/3.0.2/zabbix-3.0.2.tar.gz dest=/home/{{ username }}/zabbix-3.0.2.tar.gz mode=0440
  register: zabbix_download

- stat: path=/home/{{username}}/zabbix-3.0.2.tar.gz
  register: zabbix_tar_stat

- stat: path=/home/{{username}}/zabbix-3.0.2
  register: zabbix_extract_stat


- name:  Extract kodibackup tar
  when:  zabbix_tar_stat.stat.exists == True and zabbix_extract_stat.stat.exists == False 
  unarchive: src=/home/{{ username }}/zabbix-3.0.2.tar.gz dest=/home/{{ username }}/ copy=no owner={{ username }} group={{ username }}

- name: Create zabbix user group
  become: yes
  group: name=zabbix state=present

- name: Create zabbix user
  become: yes
  user: name=zabbix group=zabbix groups=adm append=yes

## Create and setup Database
## --------------------------
- name: Create postgres zabbix user
  become: yes
  become_user: postgres
  postgresql_user: name=zabbix password=zabbix

- name: Create postgres zabbix database
  become: yes
  become_user: postgres
  postgresql_db: name=zabbix owner=zabbix 

- stat: path=/home/{{username}}/.pgpass
  register: pgpass_file_stat

- name: Create pgpass file
  when: pgpass_file_stat.stat.exists == False
  template: src=pgpass.j2 dest=/home/{{ username }}/.pgpass owner={{ username }} group={{ username }} mode=0600

- name: Copy zabbix schema
  become: no
  shell: psql -h localhost zabbix zabbix < /home/{{ username }}/zabbix-3.0.2/database/postgresql/schema.sql

- name: Database | Copy zabbix images
  become: no
  shell: psql -h localhost zabbix zabbix < /home/{{ username }}/zabbix-3.0.2/database/postgresql/images.sql

- name: Copy zabbix data
  become: no
  shell: psql -h localhost zabbix zabbix < /home/{{ username }}/zabbix-3.0.2/database/postgresql/data.sql

## Makefile and install
## --------------------------
- stat: path=/home/{{ username }}/zabbix-3.0.2/Makefile
  register: makefile_stat

- name: Configure Make install
  register: config_makefile
  when: makefile_stat.stat.exists == False
  shell: ./configure --enable-server  --with-postgresql --with-net-snmp --with-libcurl --with-libcurl2 --with-ssh2 --with-unixodbc
  args:
    chdir: zabbix-3.0.2/

- name: Make install 
  become: yes
  shell: make install
  args:
    chdir: zabbix-3.0.2/
        
### Setup webpage
### --------------------------
- name: Create HTML file directory
  become: yes
  file: path=/var/www/html/zabbix/ owner={{ username }} group={{ username}} mode=0755 state=directory

- stat: path=/var/www/html/zabbix/index.php
  register: htmlindex_stat

- name: Copy HTML files
  become: yes
  when: htmlindex_stat.stat.exists == False
  command: cp -a /home/{{ username }}/zabbix-3.0.2/frontends/php/. /var/www/html/zabbix

- name: Delete default nginx symbolic link 
  become: yes
  file: dest=/etc/nginx/sites-enabled/default state=absent

- name: Create nginx config file
  become: yes
  copy: src=zabbix dest=/etc/nginx/sites-available/zabbix owner={{ username }} group={{ username}}

- name: Create zabbix site link
  become: yes
  file: src=/etc/nginx/sites-available/zabbix dest=/etc/nginx/sites-enabled/zabbix state=link
  notify:
    - restart nginx

- name: Copy php.ini file
  become: yes
  copy: src=php.ini dest=/etc/php5/fpm/php.ini owner=root group=root
  notify:
    - restart php5-fpm  
      
# Run handlers
- meta: flush_handlers

- name: Copy zabbix php config file
  copy: src=zabbix.conf.php dest=/var/www/html/zabbix/conf/zabbix.conf.php owner={{ username }} group={{ username}}
      
##TODO: make sure this file is up to date
- name: Copy zabbix config file
  become: yes
  copy: src=zabbix_server.conf dest=/usr/local/etc/zabbix_server.conf owner=root group=staff
      
- name: Copy systemd unit file
  become: yes
  register: systemd
  copy: src=zabbix-server.service dest=/lib/systemd/system/zabbix-server.service 
      
- name: Reload systemd
  become: yes
  when: systemd.changed
  command: systemctl daemon-reload

- name: Start and enable zabbix-server 
  become: yes
  service: name=zabbix-server state=started enabled=yes
#
##TODO Move to own file. cleanup.yml
##--- Cleanup --- #
##Delete the .pgpass file
#- name: Delete pgpassfile 
#  file: dest=/home/{{ username }}/.pgpass state=absent
#
#- name: Delete zabbix archive
#  file: dest=/home/{{ username }}/zabbix-3.0.2 state=absent
#
#- name: Delete zabbix Download
#  file: dest=/home/{{ username }}/zabbix-3.0.2.tar.gz state=absent
#
- name: Copy Slack script
  become: yes
  template: src=slack.sh.j2 dest=/usr/local/share/zabbix/alertscripts/slack.sh owner={{ username }} group={{ username }} mode=0775

- name: Copy mib file HIK-DEVICE-MIB
  become: yes
  copy: src=HIK-DEVICE-MIB.txt dest=/usr/share/snmp/mibs/HIK-DEVICE-MIB.txt owner={{ username }} group={{ username }}

- name: Copy mib file EPCGLOBAL-READER-MIB
  become: yes
  copy: src=EPCGLOBAL-READER-MIB.txt dest=/usr/share/snmp/mibs/EPCGLOBAL-READER-MIB.txt owner={{ username }} group={{ username }}

- name: Copy mib file EPCGLOBAL-SMI-MIB
  become: yes
  copy: src=EPCGLOBAL-SMI-MIB.txt dest=/usr/share/snmp/mibs/EPCGLOBAL-SMI-MIB.txt owner={{ username }} group={{ username }}

- name: Translate new packages
  become: yes
  command: snmptranslate -m +EPCGLOBAL-READER-MIB -IR epcgReaderObjects
  args:
    chdir: /usr/share/snmp/mibs/




 










